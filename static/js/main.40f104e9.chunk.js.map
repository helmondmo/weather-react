{"version":3,"sources":["components/destination.js","App.js","reportWebVitals.js","index.js"],"names":["Destination","props","addDestination","sendLocation","onSubmit","event","preventDefault","destination","target","value","axios","then","result","data","type","name","App","bind","state","temperature","description","city","this","setState","temp","main","desc","weather","Math","round","className","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAiCeA,MA7Bf,SAAqBC,GAAO,IACjBC,EAAgCD,EAAhCC,eAAgBC,EAAgBF,EAAhBE,aAiBvB,OACI,8BACI,uBAAMC,SAjBd,SAAsBC,GAClBA,EAAMC,iBACN,IAAMC,EAAcF,EAAMG,OAAOD,YAAYE,MAE7CN,EAAaI,GAGbG,IAAM,qDAAD,OAAsDH,EAAtD,kBAJU,qCAKXI,MAAK,SAAAC,GAAM,OAAIV,EAAeU,EAAOC,UASrC,UACI,0DACA,uBAAOC,KAAK,OAAOC,KAAO,gBAC1B,kDC6BDC,E,kDAhDb,WAAYf,GAAO,IAAD,8BAChB,cAAMA,IACDC,eAAiB,EAAKA,eAAee,KAApB,gBACtB,EAAKd,aAAe,EAAKA,aAAac,KAAlB,gBACpB,EAAKC,MAAQ,CACTX,YAAa,GACbY,YAAa,KACbC,YAAa,IAPD,E,yDAYLC,GACXC,KAAKC,SAAS,CACZhB,YAAac,M,qCAIFd,GACb,IAAMiB,EAAOjB,EAAYkB,KAAKD,KACxBE,EAAOnB,EAAYoB,QAAQ,GAAGP,YACpCE,KAAKC,SAAS,CACZJ,YAA2C,GAA9BS,KAAKC,MAAOL,EAAO,QAAgB,GAChDJ,YAAaM,M,+BAOR,IAAD,EAC0CJ,KAAKJ,MAA9CC,EADD,EACCA,YAAaC,EADd,EACcA,YAAab,EAD3B,EAC2BA,YACnC,OACE,qBAAKuB,UAAU,MAAf,SACG,sBAAKA,UAAWX,EAAc,GAAK,MAAQ,OAA3C,UACG,8CACA,oBAAIW,UAAU,OAAd,SAAsBX,IACtB,6BAAKZ,IACL,+BAAKa,EAAL,QACA,cAAC,EAAD,CAAalB,eAAgBoB,KAAKpB,eAAgBC,aAAcmB,KAAKnB,wB,GAzC7D4B,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.40f104e9.chunk.js","sourcesContent":["import React from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nfunction Destination(props){\r\n    const {addDestination, sendLocation} = props\r\n   \r\n    function handleSubmit(event){\r\n        event.preventDefault()\r\n        const destination = event.target.destination.value\r\n        const apiKey = 'e808281f6c2ee83822fb7860e9a0a23b'\r\n        sendLocation(destination)\r\n        //api.openweathermap.org/data/2.5/weather?q={city name}&appid={API key}\r\n\r\n        axios(`https://api.openweathermap.org/data/2.5/weather?q=${destination}&appid=${apiKey}`)\r\n           .then(result => addDestination(result.data))\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Search city weather: </label>\r\n                <input type='text' name = 'destination'/>\r\n                <button>Search</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Destination","import React, { Component } from 'react'\nimport './index.css';\n\nimport Destination from './components/destination'\n\n\nclass App extends Component {\n\n  constructor(props){\n    super(props)\n    this.addDestination = this.addDestination.bind(this)\n    this.sendLocation = this.sendLocation.bind(this)\n    this.state = {\n        destination: '',  \n        temperature: null,\n        description: ''\n    }\n  }\n\n\n  sendLocation(city){\n    this.setState({\n      destination: city\n    })\n  }\n\n  addDestination(destination){\n    const temp = destination.main.temp\n    const desc = destination.weather[0].description\n    this.setState({\n      temperature: Math.round((temp - 273.15)) * 10 / 10 ,\n      description: desc\n    })\n  }\n\n \n\n\n  render(){\n    const {temperature, description, destination} = this.state\n  return (\n    <div className=\"app\"> \n       <div className={temperature > 16 ? 'hot' : 'cold'}>\n          <h1> WeatherApp </h1>\n          <h2 className='temp'>{temperature}</h2>\n          <h3>{destination}</h3>\n          <h3>{description}  </h3>\n          <Destination addDestination={this.addDestination} sendLocation={this.sendLocation}/>\n          </div>\n          \n   \n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}